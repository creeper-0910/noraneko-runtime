# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

on:
    workflow_call:

jobs:
  generate-profdata-and-jarlog:
    name: Generate PGO Profile Data and Jarlog (macOS)
    runs-on: ${{ matrix.macos_version }}
    strategy:
      matrix:
        macos_version: [macos-13, macos-14] # x86_64 and arm64

    steps:
      # System info and environment setup
      - name: Print CPU Info and Prepare Directories
        run: |
          sysctl machdep.cpu
          export RUNNER_USERDIR=$(echo ~)
          echo "RUNNER_USERDIR=$RUNNER_USERDIR" >> $GITHUB_ENV
          mkdir -p ~/downloads/artifacts

      # Checkout source
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Determine architecture type
      - name: Detect Architecture
        id: arch
        shell: bash
        run: |
          if [[ "${{ matrix.macos_version }}" == "macos-13" ]]; then
            echo "arch=x86_64" >> $GITHUB_OUTPUT
          else
            echo "arch=aarch64" >> $GITHUB_OUTPUT
          fi

      # Download build artifact
      - name: Download Build Artifact
        id: download
        uses: actions/download-artifact@v4
        with:
          name: noraneko-mac-${{ steps.arch.outputs.arch }}-build-with-profgen
          path: ~/downloads/artifacts

      # Ensure Python 3.12 is available
      - name: Install Python 3.12 (if needed)
        continue-on-error: true
        run: brew install python@3.12
      - name: Link Python 3.12 (if needed)
        continue-on-error: true
        run: brew link --force --overwrite python@3.12
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Setup build environment
      - name: Configure Build Environment
        run: |
          echo 'ac_add_options --enable-bootstrap' >> mozconfig
          echo 'mozconfig: **********************'
          cat ./mozconfig
          echo '*********************************'
          ./mach bootstrap --application-choice browser

      # Install setuptools
      - name: Install setuptools
        run: pip install setuptools

      # Extract build artifact
      - name: Extract Build Artifact
        run: |
          mkdir -p ./noraneko
          cp ~/downloads/artifacts/${{ steps.arch.outputs.arch }}-apple-darwin-output.tar.xz ./
          tar xf ./${{ steps.arch.outputs.arch }}-apple-darwin-output.tar.xz

      # Generate profdata and jarlog
      - name: Generate Profdata and Jarlog
        env:
          LLVM_PROFDATA: ${{ env.RUNNER_USERDIR }}/.mozbuild/clang/bin/llvm-profdata
          JARLOG_FILE: en-US.log
        run: |
          sudo hdiutil attach ./obj-*/dist/*.dmg
          ls /Volumes/Noraneko
          mkdir temptemp
          sudo cp -rP /Volumes/Noraneko/* ./temptemp
          ls ./temptemp
          sudo hdiutil unmount /Volumes/Noraneko
          ./mach python build/pgo/profileserver.py --binary ./temptemp/Noraneko.app/Contents/MacOS/noraneko

      # Publish results
      - name: Upload Profdata and Jarlog
        uses: actions/upload-artifact@v4
        with:
          name: noraneko-${{ steps.arch.outputs.arch }}-apple-darwin-profdata-and-jarlog
          path: |
            merged.profdata
            en-US.log
