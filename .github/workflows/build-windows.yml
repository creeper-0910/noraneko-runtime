# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

on:
  workflow_call:
    inputs:
      debug:
        type: boolean
        default: true
      profile-generate-mode:
        type: boolean
        default: false
      pgo_artifact_name:
        type: string
        required: false

jobs:
  win-build:
    runs-on: ubuntu-latest
    steps:
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "latest"
    - uses: actions/checkout@v4
      name: Clone üß¨
      with:
        submodules: "true"

    - name: Configure sccache
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_RESULTS_URL', process.env.ACTIONS_RESULTS_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: setup Rust (shared)
      run: |
        ./.github/workflows/scripts/setup-rust.sh windows x86_64 ${{ inputs.pgo_artifact_name }}
      env:
        GHA_pgo_artifact_name: ${{inputs.pgo_artifact_name}}
    - name: Allocate swap
      run: ./.github/workflows/scripts/allocate-swap.sh

    - name: Download PGO Artifact if exists
      if: inputs.pgo_artifact_name
      uses: actions/download-artifact@v4
      with:
        name: ${{inputs.pgo_artifact_name}}
        path: ~/artifacts

    - name: Setup noraneko (shared)
      run: |
        ./.github/workflows/scripts/setup-noraneko.sh windows x86_64 ${{ inputs.debug }} ${{ inputs.profile-generate-mode }}
      env:
        GHA_debug: ${{inputs.debug}}
        GHA_profgen: ${{inputs.profile-generate-mode}}
        GHA_pgo_artifact_name: ${{inputs.pgo_artifact_name}}

    - name: Build & Package (shared)
      run: |
        ./.github/workflows/scripts/build-and-package.sh windows x86_64 ${{ inputs.profile-generate-mode }}

    # Publish START
    # Remove same name uploaded artifacts
    - name: Remove same name uploaded artifacts
      uses: geekyeggo/delete-artifact@v5
      with:
        name: |
          noraneko-win-amd64-moz-artifact
          dist-host
          application-ini

    - name: Remove existing artifact directory
      run: |
        if [ -d ~/artifact ]; then rm -rf ~/artifact; fi
    - name: extract moz-artifact
      run: |
        mkdir ~/artifact
        unzip obj-x86_64-pc-windows-msvc/dist/noraneko-*win64.zip -d ~/artifact
        cp ./obj-x86_64-pc-windows-msvc/dist/bin/application.ini ./nora-application.ini

    - name: Publish Package Mozilla Artifact üéÅ
      uses: actions/upload-artifact@v4
      with:
        name: noraneko-win-amd64-moz-artifact
        path: ~/artifact/

    - name: Publish dist/* for generate profile
      if: inputs.profile-generate-mode
      uses: actions/upload-artifact@v4
      with:
        name: noraneko-win-amd64-profile-generate-mode-package
        path: obj-x86_64-pc-windows-msvc/dist/

    - name: Publish dist/host for MAR
      uses: actions/upload-artifact@v4
      with:
        name: win-amd64-dist-host
        path: obj-x86_64-pc-windows-msvc/dist/host/
        overwrite: true

    - name: Publish nora-application.ini for MAR
      uses: actions/upload-artifact@v4
      with:
        name: win-amd64-application-ini
        path: ./nora-application.ini
        overwrite: true
    # Publish END
