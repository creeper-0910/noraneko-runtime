# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Reusable common build template.
# Inputs:
# - platform (string, required)
# - arch (string, required)
# - debug (boolean, required, default: true)
# - release (boolean, optional, default: true)
# - code-coverage (boolean, optional, default: false)
# - profile-generate-mode (boolean, optional, default: false)
# - build-with-profdata-and-jarlog (boolean, optional)
# - pgo (boolean, optional, default: false)
# - pgo_artifact_name (string, optional)
# - MOZ_BUILD_DATE (string, optional, default: "")
#
# Compatibility notes:
# - This file reproduces the behavior from workflows/build.yml. Keep it in sync
#   with that file when updating build logic.
# - Callers that need to forward repository secrets should invoke this reusable
#   workflow with: secrets: inherit
#   (Do not hardcode secrets in this file ‚Äî callers must provide them.)
# - Callers can pass MOZ_BUILD_DATE and pgo_artifact_name to preserve compatibility.
on:
  workflow_call:
    inputs:
      platform:
        type: string
        required: true
      arch:
        type: string
        required: true
      debug:
        type: boolean
        required: true
        default: true
      release:
        type: boolean
        required: false
        default: true
      code-coverage:
        type: boolean
        required: false
        default: false
      profile-generate-mode:
        type: boolean
        required: false
        default: false
      build-with-profdata-and-jarlog:
        type: boolean
        required: false
      pgo:
        type: boolean
        required: false
        default: false
      pgo_artifact_name:
        type: string
        required: false
      MOZ_BUILD_DATE:
        type: string
        required: false
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Shared: Node.js, checkout, sccache
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Clone üß¨
        uses: actions/checkout@v4
        with:
          submodules: ${{ inputs.platform == 'mac' && 'recursive' || 'true' }}

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9

      # Optimized Setup Rust
      - name: Setup Rust
        run: ./.github/workflows/scripts/setup-rust.sh ${{ inputs.platform }} ${{ inputs.arch }} ${{ inputs.pgo_artifact_name }}

      # Shared: Allocate swap
      - name: Allocate swap
        run: ./.github/workflows/scripts/allocate-swap.sh ${{ inputs.arch }}

      # Unified: Download PGO Artifact if exists
      - name: Download PGO Artifact if exists
        if: inputs.pgo_artifact_name
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.pgo_artifact_name }}
          path: ~/artifacts


      # Unified Setup noraneko
      - name: Setup noraneko
        run: ./.github/workflows/scripts/setup-noraneko.sh ${{ inputs.platform }} ${{ inputs.arch }} ${{ inputs.debug }} ${{ inputs.pgo || inputs.profile-generate-mode || '' }} ${{ inputs.MOZ_BUILD_DATE }}
        env:
          SCCACHE_GHA_ENABLED: "on"

      # Unified Build & Package
      - name: Build & Package
        run: ./.github/workflows/scripts/build-and-package.sh ${{ inputs.platform }} ${{ inputs.arch }} ${{ inputs.profile-generate-mode }} ${{ inputs.MOZ_BUILD_DATE }}
        env:
          SCCACHE_GHA_ENABLED: "on"

      # Windows-specific artifact extraction
      - name: Remove same name uploaded artifacts
        if: inputs.platform == 'windows'
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            noraneko-win-x86_64-moz-artifact
            dist-host
            application-ini

      # Publish artifact (unified)
      - name: Publish Package Mozilla Artifact üéÅ
        uses: actions/upload-artifact@v4
        with:
          name: noraneko-${{ inputs.platform }}-${{ inputs.arch }}-moz-artifact
          path: ${{ inputs.platform == 'windows' && format('~/output/noraneko-{0}-{1}-moz-artifact.zip', inputs.platform, inputs.arch) || format('~/output/noraneko-{0}-{1}-moz-artifact.tar.xz', inputs.platform, inputs.arch) }}

      # Publish profile-generate-mode package
      - name: Publish Profile Generate Mode Package
        if: inputs.profile-generate-mode && inputs.platform == 'windows' && inputs.arch == 'amd64'
        uses: actions/upload-artifact@v4
        with:
          name: noraneko-win-amd64-profile-generate-mode-package
          path: ${{ format('~/output/noraneko-{0}-{1}-moz-artifact.zip', inputs.platform, inputs.arch) }}

      - name: Publish dist/host for MAR
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.platform }}-${{ inputs.arch }}-dist-host
          path: ${{ inputs.platform == 'windows' && 'obj-x86_64-pc-windows-msvc/dist/host/' || format('obj-{0}-*-linux-gnu/dist/host/', inputs.arch) }}
          overwrite: true

      - name: Publish nora-application.ini for MAR
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.platform }}-${{ inputs.arch }}-application-ini
          path: ./nora-application.ini
          overwrite: true
