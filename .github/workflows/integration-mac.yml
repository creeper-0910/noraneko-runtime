# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

#! SELF HOST DOES NOT SUPPORTED
#TODO: separate Publish to other workflow

on:
  workflow_call:
    inputs:
      x86_64_artifact_name:
        type: string
        default: ""
      aarch64_artifact_name:
        type: string
        default: ""
      beta:
        type: boolean
        default: false
      MOZ_BUILD_DATE:
        type: string
        default: ""

jobs:
  integration:
    name: Integrate and Package Universal macOS Build
    runs-on: macos-latest
    steps:
      # Checkout source
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Download build artifacts
      - name: Download AArch64 Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.aarch64_artifact_name }}
          path: ./
      - name: Download x86_64 Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.x86_64_artifact_name }}
          path: ./

      # Extract build artifacts
      - name: Extract Artifacts
        run: |
          brew install gnu-tar
          export PATH=/usr/local/opt/gnu-tar/libexec/gnubin:$PATH
          tar -xf ./noraneko-x86_64-apple-darwin-with-pgo.tar.gz
          tar -xf ./noraneko-aarch64-apple-darwin-with-pgo.tar.gz

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Determine branding type
      - name: Set Branding Type
        shell: bash
        run: |
          if [[ $GHA_BETA == 'true' ]]; then
            export APP_NAME="Noraneko Beta"
          else
            export APP_NAME="Noraneko"
          fi
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
        env:
          GHA_BETA: ${{ inputs.beta }}

      # Prepare build environment
      - name: Prepare Build Environment
        shell: bash
        run: |
          ./mach --no-interactive bootstrap --application-choice browser
          echo 'ac_add_options --enable-bootstrap' >> mozconfig
          ./mach configure

      # Install apple-codesign
      - name: Install apple-codesign
        run: cargo install apple-codesign

      # Extract .app from DMG files
      - name: Extract .app from DMG
        run: |
          rm -rf ./obj-x86_64-apple-darwin/dist/noraneko/*.app
          rm -rf ./obj-aarch64-apple-darwin/dist/noraneko/*.app

          hdiutil attach ./obj-x86_64-apple-darwin/dist/noraneko*.mac.dmg
          cp -r "/Volumes/Noraneko/${{ env.APP_NAME }}.app" ./obj-x86_64-apple-darwin/dist/noraneko/
          hdiutil detach /Volumes/Noraneko/

          hdiutil attach ./obj-aarch64-apple-darwin/dist/noraneko*.mac.dmg
          cp -r "/Volumes/Noraneko/${{ env.APP_NAME }}.app" ./obj-aarch64-apple-darwin/dist/noraneko/
          hdiutil detach /Volumes/Noraneko/

      # Integrate universal build
      - name: Integrate Universal Build
        run: |
          ./mach python ./toolkit/mozapps/installer/unify.py \
            ./obj-x86_64-apple-darwin/dist/noraneko/${{ env.APP_NAME }}.app \
            ./obj-aarch64-apple-darwin/dist/noraneko/${{ env.APP_NAME }}.app

      # Create DMG and supporting artifacts
      - name: Create DMG and Artifacts
        run: |
          ./mach python -m mozbuild.action.make_dmg ./obj-x86_64-apple-darwin/dist/noraneko noraneko-macOS-universal-moz-artifact.dmg
          cp ./obj-x86_64-apple-darwin/dist/noraneko*update_framework_artifacts.zip ./noraneko-macOS.update_framework_artifacts.zip
          cp ./obj-x86_64-apple-darwin/dist/noraneko/Noraneko.app/Contents/Resources/application.ini ./nora-application.ini

      # Remove old uploaded artifacts
      - name: Remove Old Uploaded Artifacts
        uses: geekyeggo/delete-artifact@v5.1.0
        with:
          name: |
            noraneko-mac-x86_64-package
            noraneko-mac-aarch64-package

      # Publish artifacts (dev and release)
      - name: Publish Dev Artifact
        uses: actions/upload-artifact@v4
        with:
          name: noraneko-mac-universal-moz-artifact-dev
          if-no-files-found: ignore
          path: ./noraneko-macOS-universal-moz-artifact.dmg

      - name: Publish Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: noraneko-mac-universal-moz-artifact-release
          if-no-files-found: ignore
          path: |
            ./noraneko-macOS-universal-moz-artifact.dmg
            ./noraneko-macOS.update_framework_artifacts.zip

      - name: Publish dist/host for MAR
        uses: actions/upload-artifact@v4
        with:
          name: macOS-universal-dist-host
          path: obj-x86_64-apple-darwin/dist/host/
          overwrite: true

      - name: Publish nora-application.ini for MAR
        uses: actions/upload-artifact@v4
        with:
          name: macOS-universal-application-ini
          path: ./nora-application.ini
          overwrite: true
